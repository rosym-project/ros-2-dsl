package ROS2.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Action = 0;
  public static final int Argument = 1;
  public static final int CapabilityProfileAnnotation = 2;
  public static final int Monitor = 3;
  public static final int Namespace = 4;
  public static final int Remappings = 5;
  public static final int RequirementsProfileAnnotation = 6;
  public static final int Topic = 7;
  public static final int TopicRef = 8;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x73f2d64e927d48dcL, 0x89c7793f38431f94L);
    builder.put(0x22f0a573da97db56L, Action);
    builder.put(0x31ec195a6838a2aeL, Argument);
    builder.put(0x22f0a573da97db52L, CapabilityProfileAnnotation);
    builder.put(0x22f0a573da97db54L, Monitor);
    builder.put(0x28eca1beb2f1bfe4L, Namespace);
    builder.put(0x22f0a573da97db55L, Remappings);
    builder.put(0x31ec195a68373327L, RequirementsProfileAnnotation);
    builder.put(0x22f0a573da97db53L, Topic);
    builder.put(0x28eca1beb2ec604cL, TopicRef);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
