package ROS2.editor;

/*Generated by MPS */

import jetbrains.mps.smodel.action.IReferentPresentationProvider;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SConcept;
import org.jetbrains.mps.openapi.language.SInterfaceConcept;

public class PresentationProviders {
  public static final IReferentPresentationProvider PRESENTATION_oxbo9f_a0a3a = new IReferentPresentationProvider() {
    @NotNull
    @Override
    public String getPresentation(@NotNull SNode sourceNode, @NotNull SNode targetNode) {
      List<SNode> ancestors = SNodeOperations.getNodeAncestors(targetNode, null, false);
      String path = SPropertyOperations.getString(targetNode, PROPS.name$MnvL);
      for (int i = 0; i < ListSequence.fromList(ancestors).count(); i++) {
        SNode candidate = ancestors.get(i);
        if (SNodeOperations.isInstanceOf(candidate, CONCEPTS.System$7o) || SNodeOperations.isInstanceOf(candidate, CONCEPTS.Composite$LA)) {
          return path;
        } else if (SNodeOperations.isInstanceOf(candidate, CONCEPTS.INamedConcept$Kd)) {
          path = SPropertyOperations.getString(((SNode) candidate), PROPS.name$MnvL) + "." + path;
        }
      }
      return path;
    }
  };
  public static final IReferentPresentationProvider PRESENTATION_lxxto2_a0a0a = new IReferentPresentationProvider() {
    @NotNull
    @Override
    public String getPresentation(@NotNull SNode sourceNode, @NotNull SNode targetNode) {
      List<SNode> ancestors = SNodeOperations.getNodeAncestors(targetNode, null, false);
      String path = SPropertyOperations.getString(targetNode, PROPS.name$MnvL);
      for (int i = 0; i < ListSequence.fromList(ancestors).count(); i++) {
        SNode candidate = ancestors.get(i);
        if (SNodeOperations.isInstanceOf(candidate, CONCEPTS.System$7o) || SNodeOperations.isInstanceOf(candidate, CONCEPTS.Composite$LA)) {
          return path;
        } else if (SNodeOperations.isInstanceOf(candidate, CONCEPTS.INamedConcept$Kd)) {
          path = SPropertyOperations.getString(((SNode) candidate), PROPS.name$MnvL) + "." + path;
        }
      }
      return path;
    }
  };

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Composite$LA = MetaAdapterFactory.getConcept(0x218e40b475d44de8L, 0x83e6b31e4da8bceeL, 0x5e098f0c19d60d8dL, "Component.structure.Composite");
    /*package*/ static final SConcept System$7o = MetaAdapterFactory.getConcept(0x218e40b475d44de8L, 0x83e6b31e4da8bceeL, 0x17882579cafcccdbL, "Component.structure.System");
    /*package*/ static final SInterfaceConcept INamedConcept$Kd = MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, "jetbrains.mps.lang.core.structure.INamedConcept");
  }
}
